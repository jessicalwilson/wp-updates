#!/usr/bin/env node

const spawnSync = require('child_process').spawnSync;

let landoOutput = spawnSync('lando', ['wp', 'plugin', 'update', '--all', '--dry-run', '--format=json'], { encoding : 'utf8' });
var pluginData = '';
try {
    pluginData = JSON.parse(landoOutput.stdout);
}
catch (e) {
    pluginData = [];
    console.log(landoOutput.stdout);
    console.log(`Error getting list of plugins.`);
}

let updatedPluginList = [];

for (let plugin of pluginData) {
    console.log(`Update plugin ${plugin.name} from ${plugin.version} to ${plugin.update_version}`);
    let output = spawnSync('lando', ['wp', 'plugin', 'update', plugin.name, '--format=json'], { encoding : 'utf8' });
    let resultData;
    try {
        resultData = JSON.parse(output.stdout);
    } catch (e) {
        // console.log(e);
        console.log(output.stdout);
        console.log(`Error updating ${plugin.name} from ${plugin.version} to ${plugin.update_version}`);
        continue;
    }
    if (resultData[0].status == 'Updated') {
        console.log("Adding git commit...");
        spawnSync('git', ['add', '-A']),
        spawnSync('git', ['commit', '-m', `Update plugin ${plugin.name} from ${plugin.version} to ${plugin.update_version}`]);
        updatedPluginList.push(plugin);
    } else {
        console.log(`Error updating ${plugin.name} from ${plugin.version} to ${plugin.update_version}`);
    }
}

for (let updatedPlugin of updatedPluginList) {
    console.log(`Updating plugin ${updatedPlugin.name} from ${updatedPlugin.version} to ${updatedPlugin.update_version}`);
}
